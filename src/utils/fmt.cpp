#include "utils/fmt.hpp"

auto fmt::formatter<ActorValue>::format(ActorValue v, format_context& ctx) const {
  string_view name = "unknown";
  switch (v) {
    case ActorValue::kNone: name = "None"; break;
    case ActorValue::kAggression: name = "kAggression"; break;
    case ActorValue::kConfidence: name = "kConfidence"; break;
    case ActorValue::kEnergy: name = "kEnergy"; break;
    case ActorValue::kMorality: name = "kMorality"; break;
    case ActorValue::kMood: name = "kMood"; break;
    case ActorValue::kAssistance: name = "kAssistance"; break;
    case ActorValue::kOneHanded: name = "kOneHanded"; break;
    case ActorValue::kTwoHanded: name = "kTwoHanded"; break;
    case ActorValue::kArchery: name = "kArchery"; break;
    case ActorValue::kBlock: name = "kBlock"; break;
    case ActorValue::kSmithing: name = "kSmithing"; break;
    case ActorValue::kHeavyArmor: name = "kHeavyArmor"; break;
    case ActorValue::kLightArmor: name = "kLightArmor"; break;
    case ActorValue::kPickpocket: name = "kPickpocket"; break;
    case ActorValue::kLockpicking: name = "kLockpicking"; break;
    case ActorValue::kSneak: name = "kSneak"; break;
    case ActorValue::kAlchemy: name = "kAlchemy"; break;
    case ActorValue::kSpeech: name = "kSpeech"; break;
    case ActorValue::kAlteration: name = "kAlteration"; break;
    case ActorValue::kConjuration: name = "kConjuration"; break;
    case ActorValue::kDestruction: name = "kDestruction"; break;
    case ActorValue::kIllusion: name = "kIllusion"; break;
    case ActorValue::kRestoration: name = "kRestoration"; break;
    case ActorValue::kEnchanting: name = "kEnchanting"; break;
    case ActorValue::kHealth: name = "kHealth"; break;
    case ActorValue::kMagicka: name = "kMagicka"; break;
    case ActorValue::kStamina: name = "kStamina"; break;
    case ActorValue::kHealRate: name = "kHealRate"; break;
    case ActorValue::kMagickaRate: name = "kMagickaRate"; break;
    case ActorValue::kStaminaRate: name = "kStaminaRate"; break;
    case ActorValue::kSpeedMult: name = "kSpeedMult"; break;
    case ActorValue::kInventoryWeight: name = "kInventoryWeight"; break;
    case ActorValue::kCarryWeight: name = "kCarryWeight"; break;
    case ActorValue::kCriticalChance: name = "kCriticalChance"; break;
    case ActorValue::kMeleeDamage: name = "kMeleeDamage"; break;
    case ActorValue::kUnarmedDamage: name = "kUnarmedDamage"; break;
    case ActorValue::kMass: name = "kMass"; break;
    case ActorValue::kVoicePoints: name = "kVoicePoints"; break;
    case ActorValue::kVoiceRate: name = "kVoiceRate"; break;
    case ActorValue::kDamageResist: name = "kDamageResist"; break;
    case ActorValue::kPoisonResist: name = "kPoisonResist"; break;
    case ActorValue::kResistFire: name = "kResistFire"; break;
    case ActorValue::kResistShock: name = "kResistShock"; break;
    case ActorValue::kResistFrost: name = "kResistFrost"; break;
    case ActorValue::kResistMagic: name = "kResistMagic"; break;
    case ActorValue::kResistDisease: name = "kResistDisease"; break;
    case ActorValue::kPerceptionCondition: name = "kPerceptionCondition"; break;
    case ActorValue::kEnduranceCondition: name = "kEnduranceCondition"; break;
    case ActorValue::kLeftAttackCondition: name = "kLeftAttackCondition"; break;
    case ActorValue::kRightAttackCondition: name = "kRightAttackCondition"; break;
    case ActorValue::kLeftMobilityCondition: name = "kLeftMobilityCondition"; break;
    case ActorValue::kRightMobilityCondition: name = "kRightMobilityCondition"; break;
    case ActorValue::kBrainCondition: name = "kBrainCondition"; break;
    case ActorValue::kParalysis: name = "kParalysis"; break;
    case ActorValue::kInvisibility: name = "kInvisibility"; break;
    case ActorValue::kNightEye: name = "kNightEye"; break;
    case ActorValue::kDetectLifeRange: name = "kDetectLifeRange"; break;
    case ActorValue::kWaterBreathing: name = "kWaterBreathing"; break;
    case ActorValue::kWaterWalking: name = "kWaterWalking"; break;
    case ActorValue::kIgnoreCrippledLimbs: name = "kIgnoreCrippledLimbs"; break;
    case ActorValue::kFame: name = "kFame"; break;
    case ActorValue::kInfamy: name = "kInfamy"; break;
    case ActorValue::kJumpingBonus: name = "kJumpingBonus"; break;
    case ActorValue::kWardPower: name = "kWardPower"; break;
    case ActorValue::kRightItemCharge: name = "kRightItemCharge"; break;
    case ActorValue::kArmorPerks: name = "kArmorPerks"; break;
    case ActorValue::kShieldPerks: name = "kShieldPerks"; break;
    case ActorValue::kWardDeflection: name = "kWardDeflection"; break;
    case ActorValue::kVariable01: name = "kVariable01"; break;
    case ActorValue::kVariable02: name = "kVariable02"; break;
    case ActorValue::kVariable03: name = "kVariable03"; break;
    case ActorValue::kVariable04: name = "kVariable04"; break;
    case ActorValue::kVariable05: name = "kVariable05"; break;
    case ActorValue::kVariable06: name = "kVariable06"; break;
    case ActorValue::kVariable07: name = "kVariable07"; break;
    case ActorValue::kVariable08: name = "kVariable08"; break;
    case ActorValue::kVariable09: name = "kVariable09"; break;
    case ActorValue::kVariable10: name = "kVariable10"; break;
    case ActorValue::kBowSpeedBonus: name = "kBowSpeedBonus"; break;
    case ActorValue::kFavorActive: name = "kFavorActive"; break;
    case ActorValue::kFavorsPerDay: name = "kFavorsPerDay"; break;
    case ActorValue::kFavorsPerDayTimer: name = "kFavorsPerDayTimer"; break;
    case ActorValue::kLeftItemCharge: name = "kLeftItemCharge"; break;
    case ActorValue::kAbsorbChance: name = "kAbsorbChance"; break;
    case ActorValue::kBlindness: name = "kBlindness"; break;
    case ActorValue::kWeaponSpeedMult: name = "kWeaponSpeedMult"; break;
    case ActorValue::kShoutRecoveryMult: name = "kShoutRecoveryMult"; break;
    case ActorValue::kBowStaggerBonus: name = "kBowStaggerBonus"; break;
    case ActorValue::kTelekinesis: name = "kTelekinesis"; break;
    case ActorValue::kFavorPointsBonus: name = "kFavorPointsBonus"; break;
    case ActorValue::kLastBribedIntimidated: name = "kLastBribedIntimidated"; break;
    case ActorValue::kLastFlattered: name = "kLastFlattered"; break;
    case ActorValue::kMovementNoiseMult: name = "kMovementNoiseMult"; break;
    case ActorValue::kBypassVendorStolenCheck: name = "kBypassVendorStolenCheck"; break;
    case ActorValue::kBypassVendorKeywordCheck: name = "kBypassVendorKeywordCheck"; break;
    case ActorValue::kWaitingForPlayer: name = "kWaitingForPlayer"; break;
    case ActorValue::kOneHandedModifier: name = "kOneHandedModifier"; break;
    case ActorValue::kTwoHandedModifier: name = "kTwoHandedModifier"; break;
    case ActorValue::kMarksmanModifier: name = "kMarksmanModifier"; break;
    case ActorValue::kBlockModifier: name = "kBlockModifier"; break;
    case ActorValue::kSmithingModifier: name = "kSmithingModifier"; break;
    case ActorValue::kHeavyArmorModifier: name = "kHeavyArmorModifier"; break;
    case ActorValue::kLightArmorModifier: name = "kLightArmorModifier"; break;
    case ActorValue::kPickpocketModifier: name = "kPickpocketModifier"; break;
    case ActorValue::kLockpickingModifier: name = "kLockpickingModifier"; break;
    case ActorValue::kSneakingModifier: name = "kSneakingModifier"; break;
    case ActorValue::kAlchemyModifier: name = "kAlchemyModifier"; break;
    case ActorValue::kSpeechcraftModifier: name = "kSpeechcraftModifier"; break;
    case ActorValue::kAlterationModifier: name = "kAlterationModifier"; break;
    case ActorValue::kConjurationModifier: name = "kConjurationModifier"; break;
    case ActorValue::kDestructionModifier: name = "kDestructionModifier"; break;
    case ActorValue::kIllusionModifier: name = "kIllusionModifier"; break;
    case ActorValue::kRestorationModifier: name = "kRestorationModifier"; break;
    case ActorValue::kEnchantingModifier: name = "kEnchantingModifier"; break;
    case ActorValue::kOneHandedSkillAdvance: name = "kOneHandedSkillAdvance"; break;
    case ActorValue::kTwoHandedSkillAdvance: name = "kTwoHandedSkillAdvance"; break;
    case ActorValue::kMarksmanSkillAdvance: name = "kMarksmanSkillAdvance"; break;
    case ActorValue::kBlockSkillAdvance: name = "kBlockSkillAdvance"; break;
    case ActorValue::kSmithingSkillAdvance: name = "kSmithingSkillAdvance"; break;
    case ActorValue::kHeavyArmorSkillAdvance: name = "kHeavyArmorSkillAdvance"; break;
    case ActorValue::kLightArmorSkillAdvance: name = "kLightArmorSkillAdvance"; break;
    case ActorValue::kPickpocketSkillAdvance: name = "kPickpocketSkillAdvance"; break;
    case ActorValue::kLockpickingSkillAdvance: name = "kLockpickingSkillAdvance"; break;
    case ActorValue::kSneakingSkillAdvance: name = "kSneakingSkillAdvance"; break;
    case ActorValue::kAlchemySkillAdvance: name = "kAlchemySkillAdvance"; break;
    case ActorValue::kSpeechcraftSkillAdvance: name = "kSpeechcraftSkillAdvance"; break;
    case ActorValue::kAlterationSkillAdvance: name = "kAlterationSkillAdvance"; break;
    case ActorValue::kConjurationSkillAdvance: name = "kConjurationSkillAdvance"; break;
    case ActorValue::kDestructionSkillAdvance: name = "kDestructionSkillAdvance"; break;
    case ActorValue::kIllusionSkillAdvance: name = "kIllusionSkillAdvance"; break;
    case ActorValue::kRestorationSkillAdvance: name = "kRestorationSkillAdvance"; break;
    case ActorValue::kEnchantingSkillAdvance: name = "kEnchantingSkillAdvance"; break;
    case ActorValue::kLeftWeaponSpeedMultiply: name = "kLeftWeaponSpeedMultiply"; break;
    case ActorValue::kDragonSouls: name = "kDragonSouls"; break;
    case ActorValue::kCombatHealthRegenMultiply: name = "kCombatHealthRegenMultiply"; break;
    case ActorValue::kOneHandedPowerModifier: name = "kOneHandedPowerModifier"; break;
    case ActorValue::kTwoHandedPowerModifier: name = "kTwoHandedPowerModifier"; break;
    case ActorValue::kMarksmanPowerModifier: name = "kMarksmanPowerModifier"; break;
    case ActorValue::kBlockPowerModifier: name = "kBlockPowerModifier"; break;
    case ActorValue::kSmithingPowerModifier: name = "kSmithingPowerModifier"; break;
    case ActorValue::kHeavyArmorPowerModifier: name = "kHeavyArmorPowerModifier"; break;
    case ActorValue::kLightArmorPowerModifier: name = "kLightArmorPowerModifier"; break;
    case ActorValue::kPickpocketPowerModifier: name = "kPickpocketPowerModifier"; break;
    case ActorValue::kLockpickingPowerModifier: name = "kLockpickingPowerModifier"; break;
    case ActorValue::kSneakingPowerModifier: name = "kSneakingPowerModifier"; break;
    case ActorValue::kAlchemyPowerModifier: name = "kAlchemyPowerModifier"; break;
    case ActorValue::kSpeechcraftPowerModifier: name = "kSpeechcraftPowerModifier"; break;
    case ActorValue::kAlterationPowerModifier: name = "kAlterationPowerModifier"; break;
    case ActorValue::kConjurationPowerModifier: name = "kConjurationPowerModifier"; break;
    case ActorValue::kDestructionPowerModifier: name = "kDestructionPowerModifier"; break;
    case ActorValue::kIllusionPowerModifier: name = "kIllusionPowerModifier"; break;
    case ActorValue::kRestorationPowerModifier: name = "kRestorationPowerModifier"; break;
    case ActorValue::kEnchantingPowerModifier: name = "kEnchantingPowerModifier"; break;
    case ActorValue::kDragonRend: name = "kDragonRend"; break;
    case ActorValue::kAttackDamageMult: name = "kAttackDamageMult"; break;
    case ActorValue::kHealRateMult: name = "kHealRateMult"; break;
    case ActorValue::kMagickaRateMult: name = "kMagickaRateMult"; break;
    case ActorValue::kStaminaRateMult: name = "kStaminaRateMult"; break;
    case ActorValue::kWerewolfPerks: name = "kWerewolfPerks"; break;
    case ActorValue::kVampirePerks: name = "kVampirePerks"; break;
    case ActorValue::kGrabActorOffset: name = "kGrabActorOffset"; break;
    case ActorValue::kGrabbed: name = "kGrabbed"; break;
    case ActorValue::kDEPRECATED05: name = "kDEPRECATED05"; break;
    case ActorValue::kReflectDamage: name = "kReflectDamage"; break;
  }
  return formatter<string_view>::format(name, ctx);
}


auto fmt::formatter<ACTOR_VALUE_MODIFIER>::format(ACTOR_VALUE_MODIFIER v, format_context& ctx) const {
  string_view name = "unknown";
  switch (v) {
    case ACTOR_VALUE_MODIFIER::kPermanent: name = "kPermanent"; break;
    case ACTOR_VALUE_MODIFIER::kTemporary: name = "kTemporary"; break;
    case ACTOR_VALUE_MODIFIER::kDamage: name = "kDamage"; break;
  }
  return formatter<string_view>::format(name, ctx);
}
